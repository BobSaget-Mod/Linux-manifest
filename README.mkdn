SaberMod Linux Kernel 
=====================
Latest stable Linux kernel with some modifications, as well as a SaberMod toolchain.

Prerequisites
----------------------

You may need some additional libraries to use the included toolchain during compilation.  It is a good idea to make sure you have these packages installed to assist the graphite flags being used at runtime.

Tested on Ubuntu the following packages are available:

    * libcloog-isl-dev
      Is a set of libraries for graphite that are used during run-time.

    * libcap-dev
      Installs a missing header capability.h file.

    * liblz4-dev
      Installs lz4 compression libraries needed to compile the kernel binary image.
      
    * liblz4-tool
      Installs the lz4c compression tool needed to utilize lz4 libraries.

So for example:

    sudo apt-get install libcloog-isl-dev libcap-dev liblz4-tool liblz4-dev

Create the Directories
----------------------

You will need to set up some directories in your build environment.

To create them run:

    mkdir -p ~/bin
    mkdir -p ~/kernel


Getting Started
---------------

Enter the following to download the "repo" binary and make it executable:

    curl http://commondatastorage.googleapis.com/git-repo-downloads/repo > ~/bin/repo && chmod a+x ~/bin/repo
    
If you haven't installed repo before, or it is not working fix it using this:

    echo "export PATH=$PATH:~/bin" >> ~/.bashrc && export PATH=$PATH:~/bin
    
The first part of the command adds repo to your PATH everytime you open terminal, and the second part adds it for the current terminal session so you don't have to close and re-open.

Now enter your kernel directory:

    cd ~/kernel


To initialize your local repository for building the kernel, use a command like this:

    repo init -u git://github.com/SaberMod/Linux-manifest.git -b master

Then to sync up:

    repo sync 


Building the Kernel
--------------------

To build the kernel for Ubuntu, run the script by executing the following command from your working directory

    . ubuntu

Wait for the build to finish, and the root password when asked to install the kernel.
